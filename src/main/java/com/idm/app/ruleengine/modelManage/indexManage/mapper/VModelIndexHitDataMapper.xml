<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idm.app.ruleengine.modelManage.indexManage.mapper.VModelIndexHitDataMapper">
  <resultMap id="BaseResultMap" type="com.idm.app.ruleengine.modelManage.indexManage.model.VModelIndexHitData">
    <result column="QUERY_SEQ_NO" jdbcType="VARCHAR" property="querySeqNo" />
    <result column="CERT_NUM" jdbcType="VARCHAR" property="certNum" />
    <result column="CERT_TYPE" jdbcType="VARCHAR" property="certType" />
    <result column="CUST_NAME" jdbcType="VARCHAR" property="custName" />
    <result column="CUST_NO" jdbcType="VARCHAR" property="custNo" />
    <result column="RULE_ID" jdbcType="VARCHAR" property="ruleId" />
    <result column="RULE_NAME" jdbcType="VARCHAR" property="ruleName" />
    <result column="FIELD_VALUE" jdbcType="VARCHAR" property="fieldValue" />
    <result column="FIELD_NAME" jdbcType="VARCHAR" property="fieldName" />
    <result column="SOURCE_NAME" jdbcType="VARCHAR" property="sourceName" />
    <result column="INDEX_NAME" jdbcType="VARCHAR" property="indexName" />
    <result column="PROD_ID" jdbcType="VARCHAR" property="prodId" />
    <result column="PROD_NAME" jdbcType="VARCHAR" property="prodName" />
    <result column="MODEL_ID" jdbcType="VARCHAR" property="modelId" />
    <result column="MODEL_NAME" jdbcType="VARCHAR" property="modelName" />
    <result column="RULE_RESULT" jdbcType="VARCHAR" property="ruleResult" />
    <result column="REFUSE_REASON" jdbcType="VARCHAR" property="refuseReason" />
    <result column="DATA_TIME" jdbcType="VARCHAR" property="dataTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    QUERY_SEQ_NO, CERT_NUM, CERT_TYPE, CUST_NAME, CUST_NO, RULE_ID, RULE_NAME, FIELD_VALUE, 
    FIELD_NAME, SOURCE_NAME, INDEX_NAME, PROD_ID, PROD_NAME, MODEL_ID, MODEL_NAME, RULE_RESULT, 
    REFUSE_REASON, DATA_TIME
  </sql>
  <select id="selectByExample" parameterType="com.idm.app.ruleengine.modelManage.indexManage.model.VModelIndexHitDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from V_MODEL_INDEX_HIT_DATA
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="com.idm.app.ruleengine.modelManage.indexManage.model.VModelIndexHitDataExample" resultType="java.lang.Long">
    select count(*) from V_MODEL_INDEX_HIT_DATA
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="selectByLineData" parameterType="java.lang.String" resultType="com.idm.app.ruleengine.modelManage.indexManage.model.IndexData">
    select * from (
    select count(1) as value, t.index_name as key, max(t.field_name) as name
    from (
    select * from v_model_index_hit_data
    where prod_name is not null
    <if test="ruleNo != null and ruleNo!=''">and rule_id like '%${ruleNo}%'
      and model_name like '%${modleName}%'</if>
        <if test=
                    "modleName != null and modleName!=''">
          and model_name like '%${modleName}%'
        </if>
        <if test="productNo != null and productNo!=''">
          and prod_id like '%${productNo}%'
        </if>
        ) t
    group by t.index_name
    ) order by value
  </select>

  <select id="selectByLineHitData" parameterType="java.lang.String" resultType="com.idm.app.ruleengine.modelManage.indexManage.model.IndexData">
    select * from (
    select count(1) as value, t.index_name as key, max(t.field_name) as name
    from (
      select * from v_model_index_hit_data
      where prod_name is not null
      and rule_result='01'
      <if test="ruleNo != null and ruleNo!=''">
        and rule_id like '%${ruleNo}%'
      </if>
      <if test="modleName != null and modleName!=''">
        and model_name like '%${modleName}%'
      </if>
      <if test="productNo != null and productNo!=''">
        and prod_id like '%${productNo}%'
      </if>
      ) t
    group by t.index_name
    ) order by value
  </select>

</mapper>