<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idm.app.system.auth.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.idm.app.system.auth.model.Role">
    <result column="ROLENO" jdbcType="VARCHAR" property="roleNo" />
    <result column="ROLENAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLEDESC" jdbcType="VARCHAR" property="roleDesc" />
    <result column="ROLESTATUS" jdbcType="VARCHAR" property="roleStatus" />
    <result column="SYSFLAG" jdbcType="VARCHAR" property="sysFlag" />
    <result column="CREATETIME" jdbcType="VARCHAR" property="createTime" />
    <result column="UPDATETIME" jdbcType="VARCHAR" property="updateTime" />
    <result column="CREATEUSER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATEUSER" jdbcType="VARCHAR" property="updateUser" />
    <result column="ROLEROOT" jdbcType="VARCHAR" property="roleRoot" />
  </resultMap>
  <sql id="Base_Column_List">
    ROLENO, ROLENAME, ROLEDESC, ROLESTATUS, SYSFLAG, CREATETIME, 
    UPDATETIME, CREATEUSER, UPDATEUSER,ROLEROOT
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectCountByAll" parameterType="com.idm.app.system.auth.model.RoleExample"  resultType="java.lang.Integer">
    select count(1)
    from IDM_ROLE_INFO t1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByAll" parameterType="com.idm.app.system.auth.model.RoleExample"  resultMap="BaseResultMap">
    select * from (select t1.*,rownum rnm from ( select 
    <include refid="Base_Column_List" />
    from IDM_ROLE_INFO t1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by #{orderByClause}
    </if>
    )t1 
    <if test="page!= null and size!= null">
      where rownum &lt;= #{page}*#{size}
    </if>
    )
    <if test="page!= null and size!= null">
      where rnm &gt;= (#{page}-1)*#{size} +1 
    </if>
  </select>
  
  <insert id="saveRoleInfo" parameterType="com.idm.app.system.auth.model.Role">
    insert into IDM_ROLE_INFO (ROLENO, ROLENAME, ROLEDESC, 
      ROLESTATUS, SYSFLAG, 
      CREATETIME, UPDATETIME, CREATEUSER, UPDATEUSER,ROLEROOT
      )
    values (#{roleNo,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{roleStatus,jdbcType=VARCHAR}, #{sysFlag,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR},#{roleRoot,jdbcType=VARCHAR})
  </insert>
  
  <update id="updateRoleInfo" parameterType="com.idm.app.system.auth.model.Role">
    update IDM_ROLE_INFO set 
    ROLENAME=#{roleName,jdbcType=VARCHAR}, 
    ROleDESC=#{roleDesc,jdbcType=VARCHAR}, 
      ROLESTATUS=#{roleStatus,jdbcType=VARCHAR}, 
      SYSFLAG=#{sysFlag,jdbcType=VARCHAR}, 
      UPDATETIME=#{updateTime,jdbcType=DATE}, 
      UPDATEUSER=#{updateUser,jdbcType=VARCHAR},
      ROLEROOT=#{roleRoot,jdbcType=VARCHAR}
      where ROLENO=#{roleNo,jdbcType=VARCHAR}
  </update>
  
  <delete id="deleteRoleInfo" parameterType="java.lang.String">
    delete IDM_ROLE_INFO  
      where ROLENO=#{roleNo,jdbcType=VARCHAR}
  </delete>
  
  <select id="selectFunctionsByRole" parameterType="java.lang.String" resultType="java.lang.String">
    select functions
    from IDM_ROLE_INFO
    where roleno=#{roleNo,jdbcType=VARCHAR}
  </select>
  
  <select id="selectRoleInfoByRoleNo" parameterType="java.lang.String" resultType="com.idm.app.system.auth.model.Role">
    select *
    from IDM_ROLE_INFO
    where roleno=#{roleNo,jdbcType=VARCHAR}
  </select>
  
  <select id="selectRoleInfoByRoleName" parameterType="java.lang.String" resultType="com.idm.app.system.auth.model.Role">
    select *
    from IDM_ROLE_INFO
    where rolename=#{roleName,jdbcType=VARCHAR}
  </select>
  
  <select id="selectRolesByUserId" parameterType="java.lang.String" resultType="java.lang.String">
    select roleno
    from IDM_USER_ROLE_INFO
    where userid=#{userId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectFunctionsByUserId" parameterType="java.lang.String" resultType="java.lang.String">
    select functions
    from IDM_USER_ROLE_INFO t1 left join IDM_ROLE_INFO t2
    on t2.roleno = t1.roleno
    where t1.userid=#{userId,jdbcType=VARCHAR}
  </select>
  
  
   <select id="getRoleRootByRoleId" parameterType="java.lang.String" resultType="java.lang.String">
    select t.roleroot from Idm_Role_Info t where t.roleno=#{roleNo}
  </select>
  
</mapper>