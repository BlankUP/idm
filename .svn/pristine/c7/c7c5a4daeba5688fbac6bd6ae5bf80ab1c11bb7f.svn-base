package com.idm.app.system.login.controller;

import com.alibaba.fastjson.JSONObject;
import com.idm.app.system.auth.service.AuthManager;
import com.idm.app.system.login.model.IDMUser;
import com.idm.app.system.login.service.LoginService;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;

import java.util.Date;

/**
 * 系统登录
 */
@Controller
public class LoginController {

    private Logger logger = Logger.getLogger(LoginController.class);

    @Autowired
    LoginService loginService;
    
    @Autowired
    AuthManager amanager;

    @RequestMapping("/login")
    public String login(){
        return "login";
    }

    @RequestMapping("/login_check")
    @ResponseBody
    public Object login(String username, String password, HttpServletRequest request){
        JSONObject result = new JSONObject();
        try{
            if(StringUtils.isBlank(username)){
                result.put("errorMsg","用户名称不能为空.");
                return result;
            }

            IDMUser user= loginService.findByUserId(username);
            if(user == null){
                result.put("errorMsg","用户名不存在.");
                return result;
            }
            if(user!=null && user.getUserPwd().equals(DigestUtils.md5Hex(password == null ? "" : password))){
            	amanager.initUserAuthorization(user.getUserId()); //初始化用户权限
                request.getSession().setAttribute("user", user); 
                request.getSession().setAttribute("loginTime", new Date());
                request.getSession().setMaxInactiveInterval(30*60);
                result.put("user",user);
                result.put("url","index");
            }else{
                result.put("errorMsg","用户名或密码错误.");
            }
        }catch (Exception e){
            logger.error("类LoginController中方法login出现Exception异常:"+e);
            result.put("errorMsg",e.fillInStackTrace());
        }
        return result;
    }
}
