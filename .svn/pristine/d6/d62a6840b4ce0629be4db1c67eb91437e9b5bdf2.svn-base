package com.idm.app.system.csvprocess.util;

import java.rmi.registry.LocateRegistry;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import javax.naming.Context;
import javax.naming.InitialContext;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Value;

/**  
* <p>Title: TimerManager</p>  
* @Description:定时任务管理 
* @author wangke  
* @date 2019年6月24日
* @version  1.0
*/ 
public class TimerManager {

	//时间间隔(1天)
	private static final long PERION_DAY=24*60*60*1000;
	static Logger logger = Logger.getLogger(TimerManager.class); 
	private Timer timer = new Timer();
	@Value("${HOUR}")
	private Integer hour;
	@Value("${MINUTE}")
	private Integer minute;
	@Value("${SECOND}")
	private Integer second;
	public TimerManager() {
		Calendar calendar = Calendar.getInstance();
		calendar.set(Calendar.HOUR_OF_DAY,hour);
		calendar.set(Calendar.MINUTE, minute);
		calendar.set(Calendar.SECOND, second);
		Date date = calendar.getTime();//   第一次执行定时任务的时间
		
		//如果第一次执行定时任务的时间小于当前的时间
		//此时要在第一次执行定时任务的时间加一天，以便此任务在下个时间点执行。如果不加一，任务会立即执行
//		if (date.before(new Date())) {
//			date = this.addDay(date, 1);
//		}
		//安排指定的任务在指定的时间开始进行重发的固定延迟执行
		timer.schedule(new TaskTimer(),date,PERION_DAY);
		logger.info("~~~~~~定时任务启动完成~~~~~~");
		
	}
	
	
	/**    
	* @Description:  增加一天
	* @param date
	* @param num
	* @return
	*/ 
	public Date addDay(Date date,int num) {
		Calendar startDt = Calendar.getInstance();
		startDt.setTime(date);
		startDt.add(Calendar.DAY_OF_MONTH, num);
		return startDt.getTime();
	}

}
