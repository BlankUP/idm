<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idm.app.system.auth.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.idm.app.system.auth.model.UserInfo">
    <result column="USERID" jdbcType="VARCHAR" property="userId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="userName" />
    <result column="ORGNO" jdbcType="VARCHAR" property="orgNo" />
    <result column="USERSTATUS" jdbcType="VARCHAR" property="userStatus" />
    <result column="CREATETIME" jdbcType="VARCHAR" property="createTime" />
    <result column="UPDATETIME" jdbcType="VARCHAR" property="updateTime" />
    <result column="CREATEUSER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATEUSER" jdbcType="VARCHAR" property="updateUser" />
    <result column="ORGNAME" jdbcType="VARCHAR" property="orgName" />
  </resultMap>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGNO, USERSTATUS, CREATETIME, 
    UPDATETIME, CREATEUSER, UPDATEUSER
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectCountByAll" parameterType="com.idm.app.system.auth.model.UserInfoExample"  resultType="java.lang.Integer">
    select count(1)
    from IDM_USER_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByAll" parameterType="com.idm.app.system.auth.model.UserInfoExample"  resultMap="BaseResultMap">
    select * from (select k1.*,rownum rnm from ( select 
    t1.USERID,t1.USERNAME,t1.USERPWD,t1.ORGNO,t1.USERSTATUS,
    t1.CREATETIME,t1.CREATEUSER,t2.ORGNAME 
    from IDM_USER_INFO t1 
    left join IDM_ORG_INFO t2 on t1.orgno=t2.orgno
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by #{orderByClause}
    </if>
    )k1 
    <if test="page!= null and size!= null">
      where rownum &lt;= #{page}*#{size}
    </if>
    )
    <if test="page!= null and size!= null">
      where rnm &gt;= (#{page}-1)*#{size} +1 
    </if>
  </select>
  
  <select id="selectOrgList" resultType="hashMap">
    select orgno, orgname
    from IDM_ORG_INFO
    where orgstatus = '0'
    order by orgname
  </select>
  
  <select id="selectRoleList" resultType="hashMap">
    select roleno, rolename
    from IDM_ROLE_INFO
    where rolestatus = '1'
    order by rolename
  </select>
  
  <select id="selectOrgByUserId" parameterType="java.lang.String" resultType="java.lang.String">
    select orgno
    from IDM_USER_INFO
    where userid=#{userId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectRoleListByUserId" parameterType="java.lang.String" resultType="java.lang.String">
    select roleno
    from IDM_USER_ROLE_INFO
    where userid=#{userId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUserInfoByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from IDM_USER_INFO 
    where userid=#{userId,jdbcType=VARCHAR}
  </select>
  
    <select id="selectUserInfoByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from IDM_USER_INFO 
    where username=#{userName,jdbcType=VARCHAR}
  </select>
  
  <insert id="insertUserInfo" parameterType="com.idm.app.system.auth.model.UserInfo">
    insert into IDM_USER_INFO (USERID, USERNAME, USERPWD, 
      USERSTATUS, CREATETIME, UPDATETIME, 
      CREATEUSER, UPDATEUSER, ORGNO
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{orgNo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.idm.app.system.auth.model.UserInfo">
    insert into IDM_USER_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USERID,
      </if>
      <if test="userName != null">
        USERNAME,
      </if>
      <if test="userPwd != null">
        USERPWD,
      </if>
      <if test="pwdInitFlag != null">
        PWDINITFLAG,
      </if>
      <if test="userStatus != null">
        USERSTATUS,
      </if>
      <if test="loginToken != null">
        LOGINTOKEN,
      </if>
      <if test="tokenFailureTime != null">
        TOKENFAILURETIME,
      </if>
      <if test="createTime != null">
        CREATETIME,
      </if>
      <if test="updateTime != null">
        UPDATETIME,
      </if>
      <if test="createUser != null">
        CREATEUSER,
      </if>
      <if test="updateUser != null">
        UPDATEUSER,
      </if>
      <if test="pwdUpdateTime != null">
        PWDUPDATETIME,
      </if>
      <if test="orgNo != null">
        ORGNO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="pwdInitFlag != null">
        #{pwdInitFlag,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="loginToken != null">
        #{loginToken,jdbcType=VARCHAR},
      </if>
      <if test="tokenFailureTime != null">
        #{tokenFailureTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="pwdUpdateTime != null">
        #{pwdUpdateTime,jdbcType=DATE},
      </if>
      <if test="orgNo != null">
        #{orgNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByUserIdSelective" parameterType="com.idm.app.system.auth.model.UserInfo">
    update IDM_USER_INFO
    <set>
      <if test="userName != null">
        USERNAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        USERSTATUS = #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATETIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateUser != null">
        UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="orgNo != null">
        ORGNO = #{orgNo,jdbcType=VARCHAR},
      </if>
      1=1
    </set>
    WHERE USERID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByUserId" parameterType="com.idm.app.system.auth.model.UserInfo">
    update IDM_USER_INFO
    set USERNAME = #{userName,jdbcType=VARCHAR},
      USERSTATUS = #{userStatus,jdbcType=VARCHAR},
      UPDATETIME = #{updateTime,jdbcType=DATE},
      UPDATEUSER = #{updateUser,jdbcType=VARCHAR},
      ORGNO = #{orgNo,jdbcType=VARCHAR}
      WHERE USERID = #{userId,jdbcType=VARCHAR}
  </update>
  
  <delete id="deleteUserRoles" parameterType="java.lang.String">
    delete IDM_USER_ROLE_INFO  
      where USERID=#{params.userId,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insertUserRole" parameterType="hashMap">
    insert into IDM_USER_ROLE_INFO (USERID, ROLENO)
    values (#{userId,jdbcType=VARCHAR}, #{roleNo,jdbcType=VARCHAR})
  </insert>
  
  <delete id="deleteUserByUserId" parameterType="java.lang.String">
    delete IDM_USER_INFO  
      where USERID=#{params.userId,jdbcType=VARCHAR}
  </delete>
    <update id="updateUserpwdByUserId" parameterType="com.idm.app.system.auth.model.UserInfo">
    update IDM_USER_INFO
    set USERPWD = #{userPwd,jdbcType=VARCHAR}
      WHERE USERID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>